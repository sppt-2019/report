#! /bin/bash

#set -e
#pwd

# Separate the filename and extension
IFS='.' read -r target extension _ <<<"$1"
[[ $target ]] || { echo "File name invalid." >&2; exit 1; }
if [[ $extension && $extension != "tex" ]] ; then
	echo "File extensions: $extension not supported." >&2
	exit 1
fi

# Output directory
build="build"

# Progress pretty printing
zero="|                    | (00%)      \r"
twentyfive="|#####               | (25%)      \r"
thirty="|#######             | (33%)      \r"
fifty="|##########          | (50%)      \r"
sixtysix="|#############       | (66%)      \r"
seventyfive="|###############     | (75%)      \r"
hundred="|####################| (100%)     \n"

# General pretty printing
dashed="---------------------------------------"
solid="_______________________________________"
red="\033[0;31m"
yellow="\033[1;33m"
green="\033[0;32m"
clear="\033[0m"

# Clear output directory
if [ -e "$build" ] ; then
    rm -rf $build
    mkdir $build
else
    mkdir $build
fi

# pdflatex arguements
args="-shell-escape -interaction=nonstopmode -output-directory=$build"

# Clear log file, maybe this is unnecessary
if [ -e latex.log ] ; then
    rm "latex.log"
fi
touch "latex.log"

# Check program arguements, if -q is passed run short, else run long
echo "$solid"
if [ $# == 2 ] ; then
    if [ $2 == "-q" ] ; then
	start=$SECONDS
	echo -ne "Compiling $zero"
	pdflatex $args "$target.tex" > "latex.log"
	echo -ne "Compiling $thirty"
	pdflatex $args "$target.tex" > "latex.log"
	echo -ne "Compiling $sixtysix"
	pdflatex $args "$target.tex" > "latex.log"
	echo -ne "Compiling $hundred"
        duration=$(( SECONDS - start ))
    fi
else
    start=$SECONDS
    echo -ne "Compiling $zero"
    pdflatex $args "$target.tex" > "latex.log"
    echo -ne "Compiling $twentyfive"
    biber "$build/$target.bcf" > "latex.log"
    echo -ne "Compiling $fifty"
    pdflatex $args "$target.tex" > "latex.log"
    echo -ne "Compiling $seventyfive"
    pdflatex $args "$target.tex" > "latex.log"
    echo -ne "Compiling $hundred"
    duration=$(( SECONDS - start ))
fi

# Move generated pdf to calling directory
echo "$solid"
if [ -e "$build/$target.pdf" ] ; then
	cp "$build/$target.pdf" .
	printf "${green}Build Succeed in $duration seconds!${clear}\n"
else
	printf "${red}Build Failed in $duration seconds!${clear}\n"
fi

echo "$solid"
printf "${red}"
echo "Errors"
echo "$dashed"
cat latex.log | grep -n "Error"
printf "${clear}"

echo "$solid"
printf "${yellow}"
echo "Warnings"
echo "$dashed"
cat latex.log | grep -n "Warning"
printf "${clear}"
echo "$solid"
